#!/bin/bash

# Based on afjlambert hook:
# https://github.com/LilaConcepts/LilaConceptsBestPracticeBundle/blob/master/hooks/pre-commit-cs-fixer

PROJECTROOT=$GIT_DIR/..

# Checking if php-cs-fixer is available as system-wide command
# this requires exact name "php-cs-fixer" you can do it, either by
# renaming file or creating symlink and putting it in executable 
# directory.
if hash php-cs-fixer 2>/dev/null; then
    COMMAND=php-cs-fixer
fi

# If system comand is not available, czzheck for phar in project root
# If that fails aswell attempt to download file 
if [ -z "$COMMAND" ]; then
    FIXER=php-cs-fixer.phar
    if [ ! -e ${PROJECTROOT}/${FIXER} ]; then
        echo "PHP-CS-Fixer not available, downloading to ${PROJECTROOT}/${FIXER}..."
        curl -s http://cs.sensiolabs.org/get/$FIXER > ${PROJECTROOT}/${FIXER}
        echo "Done. First time to check the Coding Standards."
        echo ""
    fi
    # TODO: handle situation when cs-fixer fails to download
    COMMAND="php $FIXER"
fi

# Copy all files staged for commit to temporary directory
# http://stackoverflow.com/a/3068990/1549881
TEMPDIR=$GIT_DIR/TEMP
rm $TEMPDIR -fr
mkdir $TEMPDIR -p
cd $PROJECTROOT
git checkout-index --prefix=$TEMPDIR/ -af
# Adding .php_cs (if present) to temporary directory
if [ -e ${PROJECTROOT}/.php_cs ]; then
    cp .php_cs $TEMPDIR/
fi
# Aswell as phar executable
if [ -n "$FIXER" ] && [ -e ${PROJECTROOT}/${FIXER} ]; then
    cp ${FIXER} $TEMPDIR/
fi

# Move to temporary directory and check files against coding standards
cd $TEMPDIR
RES=`${COMMAND} fix . --verbose --dry-run`
if [ "$RES" != "" ]; then
    echo "Coding standards are not correct, cancelling your commit."
    echo ""
    echo $RES
    echo ""
    echo "If you want to fix them run:"
    echo ""
    echo " ${COMMAND} fix . --verbose"
    echo ""
    echo "And add changes to commit"
    echo ""
    exit 1
fi

